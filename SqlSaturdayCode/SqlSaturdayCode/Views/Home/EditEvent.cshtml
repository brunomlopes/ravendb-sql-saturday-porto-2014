@model SqlSaturdayCode.Models.Event

@{
    ViewBag.Title = "EditEvent";
}

<h2>EditEvent</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, cols = (string)"120" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        

            @for (int i = 0; i < Model.tags.Count(); i++)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.tags, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => Model.tags[i], new { htmlAttributes = new { @class = "form-control" }, cols = (string)"120" })
                        @Html.ValidationMessageFor(model => Model.tags[i], "", new { @class = "text-danger" })
                    </div>
                </div>
            }

        <div class="form-group">
            @for(int i = 0; i < Model.Sessions.Count(); i++)
            {
                <h4>EventSession</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => Model.Sessions[i].SpeakerId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => Model.Sessions[i].SpeakerId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.Sessions[i].SpeakerId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => Model.Sessions[i].Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => Model.Sessions[i].Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.Sessions[i].Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => Model.Sessions[i].Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => Model.Sessions[i].Description, new { htmlAttributes = new { @class = "form-control" }, cols = (string)"120" })
                        @Html.ValidationMessageFor(model => Model.Sessions[i].Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                

                for (int j = 0; j < Model.Sessions[i].Tags.Count(); j++)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => Model.Sessions[i].Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => Model.Sessions[i].Tags[j], new { htmlAttributes = new { @class = "form-control" }, cols = (string)"120" })
                            @Html.ValidationMessageFor(model => Model.Sessions[i].Tags[j], "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            }

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
